name: Rust

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Cache cargo bin
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.cargo/bin
        key: ${{ runner.os }}-cargo-bin-${{ hashFiles('**/*') }}
        restore-keys: |
          ${{ runner.os }}-cargo-bin-${{ env.cache-name }}-
          ${{ runner.os }}-cargo-bin-
          ${{ runner.os }}-
    - name: Install just
      if: steps.cache.outputs.cache-hit != true
      run: cargo install just
    - name: Setup environment
      run: just env && just mode=release env
    - name: Build
      run: just package-build
    - name: Run tests
      run: just package-test
    - name: Build release package
      run: just mode=release package
    - name: Upload release package
      uses: actions/upload-artifact@v1
      with:
        name: linux-release-build
        path: tinyrasputin-release.zip
  
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Cache cargo bin
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.cargo/bin
        key: ${{ runner.os }}-cargo-bin-${{ hashFiles('**/*') }}
        restore-keys: |
          ${{ runner.os }}-cargo-bin-${{ env.cache-name }}-
          ${{ runner.os }}-cargo-bin-
          ${{ runner.os }}-
    - name: Install just
      if: steps.cache.outputs.cache-hit != true
      run: cargo install just
    - name: Setup environment
      shell: bash
      run: just env && just mode=release env
    - name: Build
      shell: bash
      run: just package-build
    - name: Run tests
      shell: bash
      run: just package-test
    - name: Build release package
      shell: bash
      run: just mode=release package
    - name: Upload release package
      uses: actions/upload-artifact@v1
      with:
        name: windows-release-build
        path: tinyrasputin-release.zip